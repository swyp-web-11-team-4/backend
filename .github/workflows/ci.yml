name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  checks: write
  pull-requests: write
  issues: write

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: ${{ github.event_name == 'pull_request' }}
          gradle-version: 8.14.3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with coverage
        run: |
          ./gradlew test jacocoTestReport \
            --parallel \
            --build-cache \
            --continue \
            --stacktrace
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Xmx2g"

      - name: Upload test results and coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-and-coverage-results
          path: |
            **/build/reports/tests/
            **/build/test-results/
            build/reports/jacoco/
            build/classes/
          retention-days: 3

      - name: Comment PR with test results
        uses: dorny/test-reporter@v2
        if: github.event_name == 'pull_request' && !cancelled()
        with:
          name: Test Results
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
          fail-on-error: false
          fail-on-empty: false

      - name: Add coverage report to PR
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "📊 JaCoCo 테스트 커버리지"
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          update-comment: true

  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Download coverage reports
        uses: actions/download-artifact@v5
        with:
          name: test-and-coverage-results
          path: .

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: SonarQube Scan With Gradle
        run: ./gradlew sonar --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: sonar
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_git_tag: ${{ steps.semantic.outputs.new_release_git_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v5
        with:
          branch: main
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-push:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release.outputs.new_release_published == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ needs.release.outputs.new_release_git_tag }}

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: 8.14.3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=true
          labels: |
            org.opencontainers.image.title=SWYP Web 11기 Team 4 Backend
            org.opencontainers.image.description=SpringBoot 3.5.6 + Java 17 기반의 백엔드 프로젝트입니다.
            org.opencontainers.image.vendor=SWYP
            org.opencontainers.image.version={{version}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update deployment status
        run: |
          echo "🐳 Docker 이미지 빌드 및 푸시 완료"
          echo "📦 이미지: ${{ steps.meta.outputs.tags }}"
          echo "🔗 Registry: https://github.com/${{ github.repository }}/pkgs/container/${{ github.event.repository.name }}"